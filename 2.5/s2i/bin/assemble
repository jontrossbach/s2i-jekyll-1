#!/bin/bash -e
#
# S2I assemble script for the 'jekyll-ruby-25' image.
#
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

if [[ "$1" == "-h" ]]; then
	# If the 's2i-jekyll' assemble script is executed with '-h' flag,
	# print the usage.
	exec ${STI_SCRIPTS_PATH}/usage
fi

SOURCE_DIR=/tmp/src

echo "---> enabling software collections rh-ruby25"
source scl_source enable rh-ruby25

if [[ -n "$DEBUG" ]]; then
  echo "==================================================="
  echo "==================================================="
  echo "Environment Variables:"
  env
  echo "==================================================="
  echo "==================================================="
  echo ""
  echo "==================================================="
  echo "==================================================="
  echo "Finding all files in $SOURCE_DIR:"
  find $SOURCE_DIR
  echo "==================================================="
  echo "==================================================="
  echo ""
fi

if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> restore build artifacts"
  mv /tmp/artifacts/* $HOME/.
fi

echo "---> Building application from source..."
mv $SOURCE_DIR ${HOME}/.

pushd ${HOME}/src

echo "---> Installing bundle"
if [ -n "$RUBYGEM_MIRROR" ]; then
  echo "---> Using rubygem mirror: $RUBYGEM_MIRROR"
  bundle config mirror.https://rubygems.org $RUBYGEM_MIRROR
fi
bundle install --path ${HOME}/vendor/bundle ${BUNDLE_INSTALL_ARGS}

echo "---> Updating bundle"
bundle update ${BUNDLE_UPDATE_ARGS}

echo "---> Cleaning up unused ruby gems ..."
bundle clean -V ${BUNDLE_CLEAN_ARGS}

echo "---> Running jekyll build ... "
if [ "${JEKYLL_DRAFTS:-0}" != "0" ]; then
  echo "---> Rendering drafts"
  JEKYLL_BUILD_ARGS="${JEKYLL_BUILD_ARGS} --drafts"
fi
if [ "${JEKYLL_UNPUBLISHED:-0}" != "0" ]; then
  echo "---> Rendering unpublished"
  JEKYLL_BUILD_ARGS="${JEKYLL_BUILD_ARGS} --unpublished"
fi

bundle exec "jekyll build --destination ${HOME}/html ${JEKYLL_BUILD_ARGS}"

popd

echo "---> Fix source directory permissions"
fix-permissions ./

if [[ -n "$DEBUG" ]]; then
  echo "==================================================="
  echo "==================================================="
  echo "Environment Variables:"
  env
  echo "==================================================="
  echo "==================================================="

  echo "==================================================="
  echo "==================================================="
  echo "Finding all files in ${APP_ROOT}:"
  find ${APP_ROOT}
  echo "==================================================="
  echo "==================================================="

  echo "==================================================="
  echo "==================================================="
  echo "Finding all files in /tmp:"
  find /tmp
  echo "==================================================="
  echo "==================================================="
  echo ""
fi
