#!/bin/bash -e
#
# S2I assemble script for the 's2i-jekyll' image.
#
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

if [[ "$1" == "-h" ]]; then
	# If the 's2i-jekyll' assemble script is executed with '-h' flag,
	# print the usage.
	exec ${STI_SCRIPTS_PATH}/usage
fi

if [[ -n "$DEBUG" ]]; then
  echo "==================================================="
  echo "==================================================="
  echo "Environment Variables:"
  env
  echo "==================================================="
  echo "==================================================="

  echo "==================================================="
  echo "==================================================="
  echo "Finding all files in ${APP_ROOT}:"
  find ${APP_ROOT}
  echo "==================================================="
  echo "==================================================="

  echo "==================================================="
  echo "==================================================="
  echo "Finding all files in /tmp:"
  find /tmp
  echo "==================================================="
  echo "==================================================="
fi

echo "---> enabling software collections rh-ruby25"
source scl_source enable rh-ruby25

echo "---> Building application from source..."
pushd /tmp/src

echo "---> Installing bundle"
if [ -n "$RUBYGEM_MIRROR" ]; then
  bundle config mirror.https://rubygems.org $RUBYGEM_MIRROR
fi

bundle install --path vendor/bundle ${ADDTL_BUNDLE_ARGS}

echo "---> Updating bundle"
bundle update

echo "---> Cleaning up unused ruby gems ..."
bundle clean -V

echo "---> Running jekyll build ... "
bundle exec jekyll build
popd

echo "---> Installing jekyll generated site"
cp -Rf /tmp/src/_site/. ./

echo "---> Cleaning up application source"
rm -rf ./.gem ./bin ./Dockerfile ./Gemfile ./Gemfile.lock ./Makefile

# Fix source directory permissions
fix-permissions ./

if [[ -n "$DEBUG" ]]; then
  echo "==================================================="
  echo "==================================================="
  echo "Environment Variables:"
  env
  echo "==================================================="
  echo "==================================================="

  echo "==================================================="
  echo "==================================================="
  echo "Finding all files in ${APP_ROOT}:"
  find ${APP_ROOT}
  echo "==================================================="
  echo "==================================================="

  echo "==================================================="
  echo "==================================================="
  echo "Finding all files in /tmp:"
  find /tmp
  echo "==================================================="
  echo "==================================================="
fi
