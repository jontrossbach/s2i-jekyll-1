apiVersion: v1
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${JEKYLL_HTTPD_SERVICE_NAME}
    name: ${HTTPD_IMAGE_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: ${HTTPD_IMAGE_NAMESPACE}/${HTTPD_IMAGE_NAME}
      from:
        kind: DockerImage
        name: ${HTTPD_IMAGE_NAMESPACE}/${HTTPD_IMAGE_NAME}
      importPolicy: {}
      name: ${HTTPD_IMAGE_TAG_NAME}
      referencePolicy:
        type: Source

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${JEKYLL_HTTPD_SERVICE_NAME}
    name: ${JEKYLL_HTTPD_SERVICE_NAME}
  spec:
    lookupPolicy:
      local: false

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${JEKYLL_SERVE_SERVICE_NAME}
    name: ${JEKYLL_SERVE_SERVICE_NAME}
  spec:
    lookupPolicy:
      local: false

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: s2i-jekyll
    name: ${RUBY_IMAGE_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: ${RUBY_IMAGE_NAMESPACE}/${RUBY_IMAGE_NAME}
      from:
        kind: DockerImage
        name: ${RUBY_IMAGE_NAMESPACE}/${RUBY_IMAGE_NAME}
      importPolicy: {}
      name: ${RUBY_IMAGE_TAG_NAME}
      referencePolicy:
        type: Source

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: s2i-jekyll
    name: s2i-jekyll
  spec:
    lookupPolicy:
      local: false

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: ${JEKYLL_HTTPD_SERVICE_NAME}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${JEKYLL_HTTPD_SERVICE_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM ${HTTPD_IMAGE_NAMESPACE}/${HTTPD_IMAGE_NAME}:${HTTPD_IMAGE_TAG_NAME}
        COPY html /opt/rh/httpd24/root/var/www/html
      images:
      - as: null
        from:
          kind: ImageStreamTag
          name: ${JEKYLL_SERVE_SERVICE_NAME}:prod
        paths:
        - destinationDir: .
          sourcePath: /opt/app-root/src/html
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${HTTPD_IMAGE_NAME}:latest
      type: Docker
    triggers:
    - imageChange:
      type: ImageChange

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
    name: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${JEKYLL_SERVE_SERVICE_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: "${JEKYLL_GIT_CONTEXT_DIR}"
      git:
        ref: "${JEKYLL_GIT_REF_NAME}"
        uri: "${JEKYLL_GIT_REPO}"
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: DEBUG
          value: "${DEBUG}"
        - name: JEKYLL_ENV
          value: "${JEKYLL_ENV}"
        from:
          kind: ImageStreamTag
          name: s2i-jekyll:latest
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - imageChange:
      type: ImageChange

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: s2i-jekyll
    name: s2i-jekyll
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: s2i-jekyll:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: "${S2I_JEKYLL_GIT_CONTEXT_DIR}"
      git:
        ref: "${S2I_JEKYLL_GIT_REF_NAME}"
        uri: "${S2I_JEKYLL_GIT_REPO}"
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${RUBY_IMAGE_NAME}:${RUBY_IMAGE_TAG_NAME}
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - imageChange:
      type: ImageChange

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    labels:
      app: ${JEKYLL_HTTPD_SERVICE_NAME}
    name: ${JEKYLL_HTTPD_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      app: ${JEKYLL_HTTPD_SERVICE_NAME}
      deploymentconfig: ${JEKYLL_HTTPD_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        labels:
          app: ${JEKYLL_HTTPD_SERVICE_NAME}
          deploymentconfig: ${JEKYLL_HTTPD_SERVICE_NAME}
      spec:
        containers:
        - imagePullPolicy: Always
          name: ${JEKYLL_HTTPD_SERVICE_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${JEKYLL_HTTPD_SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: ${JEKYLL_HTTPD_SERVICE_NAME}:latest
      type: ImageChange


- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
    name: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
      deploymentconfig: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
          deploymentconfig: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: JEKYLL_ENV
            value: production
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 4000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
          ports:
          - containerPort: 4000
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 4000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${JEKYLL_SERVE_PROD_SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: ${JEKYLL_SERVE_SERVICE_NAME}:prod
      type: ImageChange


- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
    name: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
      deploymentconfig: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
          deploymentconfig: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
      spec:
        containers:
        - imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 4000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
          ports:
          - containerPort: 4000
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 4000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: ${JEKYLL_SERVE_SERVICE_NAME}:latest
      type: ImageChange


- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    labels:
      app: ${JEKYLL_HTTPD_SERVICE_NAME}
    name: ${JEKYLL_HTTPD_SERVICE_NAME}
  spec:
    clusterIP: null
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      deploymentconfig: ${JEKYLL_HTTPD_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
    name: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
  spec:
    clusterIP: null
    ports:
    - name: 4000-tcp
      port: 4000
      protocol: TCP
      targetPort: 4000
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
    name: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
  spec:
    clusterIP: null
    ports:
    - name: 4000-tcp
      port: 4000
      protocol: TCP
      targetPort: 4000
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: s2i-jekyll
    name: s2i-jekyll
  spec:
    clusterIP: null
    ports:
    - name: 4000-tcp
      port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: s2i-jekyll
      deploymentconfig: s2i-jekyll
    sessionAffinity: None
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: ${JEKYLL_HTTPD_SERVICE_NAME}
    name: ${JEKYLL_HTTPD_SERVICE_NAME}
  spec:
    host: null
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${JEKYLL_HTTPD_SERVICE_NAME}
      weight: 100
    wildcardPolicy: None

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
    name: ${JEKYLL_SERVE_SERVICE_NAME}
  spec:
    alternateBackends:
    - kind: Service
      name: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
      weight: 100
    host: null
    port:
      targetPort: 4000-tcp
    to:
      kind: Service
      name: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
      weight: 0
    wildcardPolicy: None

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
    name: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
  spec:
    host: null
    port:
      targetPort: 4000-tcp
    to:
      kind: Service
      name: ${JEKYLL_SERVE_PROD_SERVICE_NAME}
      weight: 100
    wildcardPolicy: None

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
    name: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
  spec:
    host: null
    port:
      targetPort: 4000-tcp
    to:
      kind: Service
      name: ${JEKYLL_SERVE_LATEST_SERVICE_NAME}
      weight: 100
    wildcardPolicy: None

kind: Template
metadata:
  name: s2i-jekyll
  resourceVersion: ""
  selfLink: ""
labels:
  template: jekyll-template
parameters:

- description: The git repository of your Jekyll Site Source code.
  displayName: git repository
  name: JEKYLL_GIT_REPO
  value: https://github.com/mrjoshuap/s2i-jekyll.git

- description: The git branch/tag/reference of your Jekyll Site Source code.
  displayName: git branch/tag/reference name
  name: JEKYLL_GIT_REF_NAME
  value: master

- description: The context directory of your Jekyll Site Source code.
  displayName: git context directory
  name: JEKYLL_GIT_CONTEXT_DIR
  value: 2.5/test/jekyll-test-site

- description: Enable debugging of s2i build scripts -- not great for security.
  displayName: Set to enable build debugging
  name: DEBUG

- description: Set the default Jekyll Environment, by default, production
  displayName: Set the default Jekyll Environment
  name: JEKYLL_ENV
  value: production

- description: The git repository of s2i-jekyll
  displayName: git repository
  name: S2I_JEKYLL_GIT_REPO
  value: https://github.com/mrjoshuap/s2i-jekyll.git

- description: The git branch/tag/reference the s2i-jekyll
  displayName: git branch/tag/reference name
  name: S2I_JEKYLL_GIT_REF_NAME
  value: master

- description: The context directory of s2i-jekyll
  displayName: git context directory
  name: S2I_JEKYLL_GIT_CONTEXT_DIR
  value: "2.5"

- description: The name of the OpenShift Route combining the jekyll-serve-prod and jekyll-serve-latest services.
  displayName: Route name of the combined services
  name: JEKYLL_SERVE_SERVICE_NAME
  value: jekyll-serve

- description: The name of the OpenShift Service exposed for the jekyll-serve-prod container.
  displayName: Sevice name of jekyll-serve-prod
  name: JEKYLL_SERVE_PROD_SERVICE_NAME
  value: jekyll-serve-prod

- description: The name of the OpenShift Service exposed for the jekyll-serve-latest container.
  displayName: Sevice name of jekyll-serve-latest
  name: JEKYLL_SERVE_LATEST_SERVICE_NAME
  value: jekyll-serve-latest

- description: The name of the OpenShift Service exposed for the jekyll-httpd container.
  displayName: Sevice name of jekyll-httpd
  name: JEKYLL_HTTPD_SERVICE_NAME
  value: jekyll-httpd

- description: The namespace of the httpd container.
  displayName: Namespace name of httpd container
  name: HTTPD_IMAGE_NAMESPACE
  value: centos

- description: The image name of the httpd container.
  displayName: Image name of httpd container
  name: HTTPD_IMAGE_NAME
  value: httpd-24-centos7

- description: The image tag name of the httpd container.
  displayName: Image tag name of httpd container
  name: HTTPD_IMAGE_TAG_NAME
  value: latest

- description: The namespace of the ruby container.
  displayName: Namespace name of ruby container
  name: RUBY_IMAGE_NAMESPACE
  value: centos

- description: The image name of the ruby container.
  displayName: Image name of ruby container
  name: RUBY_IMAGE_NAME
  value: ruby-25-centos7

- description: The image tag name of the ruby container.
  displayName: Image tag name of ruby container
  name: RUBY_IMAGE_TAG_NAME
  value: latest
